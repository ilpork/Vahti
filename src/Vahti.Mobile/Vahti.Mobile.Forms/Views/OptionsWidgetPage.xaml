<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Vahti.Mobile.Forms.Views.OptionsWidgetPage"             
             xmlns:i18n="clr-namespace:Vahti.Mobile.Forms.Localization"
             xmlns:behaviors="clr-namespace:Vahti.Mobile.Forms.Behaviors"
             xmlns:converters="clr-namespace:Vahti.Mobile.Forms.Converters"
             x:Name="optionsWidgetPage"
             BackgroundColor="{AppThemeBinding Light={StaticResource LightThemeBackground}, Dark={StaticResource GrayThemeBackground}}"
             Title="{Binding Title}">
    <ContentPage.Behaviors>
        <behaviors:EventToCommandBehavior EventName="Disappearing" Command="{Binding UpdateCommand}" />
        <behaviors:EventToCommandBehavior EventName="Appearing" Command="{Binding InitializeCommand}" />
    </ContentPage.Behaviors>
    <ContentPage.Resources>
        <ResourceDictionary>
            <Color x:Key="ListPageBackground">Transparent</Color>
            <Style x:Key="BaseLabelStyle" TargetType="Label" >
                <Setter Property="FontSize" Value="17"/>
                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightThemeOnSurface}, Dark={StaticResource GrayThemeOnSurface}}"/>
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightThemeSurface}, Dark={StaticResource GrayThemeSurface}}"/>
            </Style>
            <Style x:Key="ItemHeaderLabelStyle" TargetType="Label" BasedOn="{StaticResource BaseLabelStyle}">
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightThemePrimary}, Dark={StaticResource GrayThemePrimary}}"/>
                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightThemeOnPrimary}, Dark={StaticResource GrayThemeOnPrimary}}"/>
            </Style>
            <Style x:Key="DescriptionLabelStyle" TargetType="Label" BasedOn="{StaticResource BaseLabelStyle}">
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <ResourceDictionary>
                <converters:SelectedItemEventArgsToSelectedItemConverter x:Key="SelectedItemConverter" />                             
            </ResourceDictionary>
        </ResourceDictionary>
    </ContentPage.Resources>
    <StackLayout 
        BackgroundColor="{AppThemeBinding Light={StaticResource LightThemeSurface}, Dark={StaticResource GrayThemeSurface}}" 
        Margin="4" 
        Padding="16,12,16,12">
        <StackLayout Margin="0,0,0,12">
            <Label Text="{i18n:Translate Options_Widget_Description}" Style="{DynamicResource DescriptionLabelStyle}"/>
        </StackLayout>
        <RefreshView Command="{Binding RefreshCommand}"                     
                     RefreshColor="{AppThemeBinding Light={StaticResource LightThemeOnSurface}, Dark={StaticResource GrayThemeOnSurface}}"
                     IsRefreshing="{Binding IsBusy}">
            <CollectionView x:Name="LocationList" IsGrouped="true" ItemsSource="{Binding Locations}" VerticalOptions="EndAndExpand">
                <CollectionView.GroupHeaderTemplate>
                    <DataTemplate>
                        <StackLayout 
                            Orientation="Horizontal" 
                            HorizontalOptions="FillAndExpand" 
                            BackgroundColor="{AppThemeBinding Light={StaticResource LightThemePrimary}, Dark={StaticResource GrayThemePrimary}}">                        
                            <Label VerticalOptions="Center" Text="{Binding Name}" Style="{DynamicResource ItemHeaderLabelStyle}" Padding="8,4,0,4"/>                            
                        </StackLayout>                        
                    </DataTemplate>
                </CollectionView.GroupHeaderTemplate>
                <CollectionView.GroupFooterTemplate>
                    <DataTemplate>
                        <Label Padding="8,0,8,0"/>
                    </DataTemplate>
                </CollectionView.GroupFooterTemplate>
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Grid RowSpacing="0" Padding="8,8,4,8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>                                
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Text="{Binding SensorName}" Style="{DynamicResource BaseLabelStyle}" Grid.Row="0" Grid.Column="0"/>
                            <StackLayout Orientation="Horizontal" Grid.Row="0" Grid.Column="1">
                                <Switch 
                                    IsToggled="{Binding IsVisibleInWidget}" 
                                    HorizontalOptions="End"  
                                    ThumbColor="{AppThemeBinding Light={StaticResource LightThemeSwitchThumbColor}, Dark={StaticResource GrayThemeSwitchThumbColor}}" 
                                    OnColor="{AppThemeBinding Light={StaticResource LightThemeSecondary}, Dark={StaticResource GrayThemeSecondary}}">
                                    <Switch.Behaviors>
                                        <behaviors:EventToCommandBehavior EventName="Toggled" Command="{Binding Source={x:Reference optionsWidgetPage}, Path=BindingContext.VisibilityToggledCommand}" />
                                    </Switch.Behaviors>
                                </Switch>                                
                            </StackLayout>                            
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </RefreshView>
    </StackLayout>
</ContentPage>